@inherits ToggleableComponentBase
@inject Microsoft.JSInterop.IJSRuntime JSRuntime

@if (_isOpen)
{
    <DynamicElement Id="@Id" TagName="div" class="@classname" role="tooltip" @onclick="@onclick" @attributes="UnknownParameters">
        <div @ref="arrow" class="arrow"></div>
        @ChildContent
    </DynamicElement>
}

@code {
    private string classname =>
        new CssBuilder("popover")
            .AddClass($"bs-popover-{Placement.ToDescriptionString()}")
            .AddClass("show", _isOpen)
            .AddClass(Class)
        .Build();

    private ElementRef arrow;

    protected override void OnAfterRender()
    {
        if (_isOpen)
        {
            var placement = Placement.ToDescriptionString();
            new BlazorStrapInterop(JSRuntime).Popper(Target, Id, arrow, placement);
        }
    }
    private string Id => Target + "-popover";

    [Parameter] private Placement Placement { get; set; } = Placement.Auto;
    [Parameter] private string Target { get; set; }
    [Parameter] private string Class { get; set; }
    [Parameter] private string Style { get; set; }
    [Parameter] private RenderFragment ChildContent { get; set; }

    private void onclick()
    {
        Hide();
    }
}