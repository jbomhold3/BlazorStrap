

<DynamicElement TagName="@Tag" class="@classname" @onclick="@OnClick" disabled="@IsDisabled" type="@IsButton">
    @ChildContent
</DynamicElement>

@code {
    string classname =>
        new CssBuilder("list-group-item")
            .AddClass($"list-group-item-{Color.ToDescriptionString()}", Color != Color.None)
            .AddClass("active", IsActive)
            .AddClass("disabled", IsDisabled && ListGroupType != ListGroupType.Button)
            .AddClass(Class)
        .Build();

    string Tag => ListGroupType switch 
        {
            ListGroupType.Button => "button",
            ListGroupType.Link => "a",
            ListGroupType.List => "li",
            _ => "li"
        };

    string IsButton => Tag == "button" ? "button" : "";
    
    [Parameter] private bool IsActive { get; set; }
    [Parameter] private bool IsDisabled { get; set; }
    [Parameter] private ListGroupType ListGroupType { get; set; } = ListGroupType.List;
    [Parameter] private EventCallback<UIMouseEventArgs> OnClick { get; set; }
    [Parameter] private Color Color { get; set; } = Color.None;
    [Parameter] private string Class { get; set; }
    [Parameter] private RenderFragment ChildContent { get; set; }

}