@inherits BootstrapComponentBase

<DynamicElement TagName="a" class="@classname" @attributes="UnknownParameters">
    @if (PaginationLinkType == PaginationLinkType.Custom)
    {
        @ChildContent
    }
    @if (PaginationLinkType == PaginationLinkType.NextIcon)
    {
        <span aria-hidden="true">&raquo;</span>
        <span class="sr-only">Next</span>
    }
    @if (PaginationLinkType == PaginationLinkType.PreviousIcon)
    {
        <span aria-hidden="true">&laquo;</span>
        <span class="sr-only">Previous</span>
    }
    @if (PaginationLinkType == PaginationLinkType.NextText)
    {
        <span>Next</span>
    }
    @if (PaginationLinkType == PaginationLinkType.PreviousText)
    {
        <span>Previous</span>
    }
</DynamicElement>

@code {
    string classname =>
        new CssBuilder("page-link")
            .AddClass(Class)
        .Build();

    [Parameter] private string Href { get; set; }
    [Parameter] private PaginationLinkType PaginationLinkType { get; set; } = PaginationLinkType.Custom;
    private string label
    {
        get
        {
            if (PaginationLinkType == PaginationLinkType.NextIcon || PaginationLinkType == PaginationLinkType.NextText) { return "Next"; }
            if (PaginationLinkType == PaginationLinkType.PreviousIcon || PaginationLinkType == PaginationLinkType.PreviousText) { return "Previous"; }
            return null;
        }
    }
    private string sr
    {
        get
        {
            if (PaginationLinkType == PaginationLinkType.NextIcon || PaginationLinkType == PaginationLinkType.NextText) { return "Next"; }
            if (PaginationLinkType == PaginationLinkType.PreviousIcon || PaginationLinkType == PaginationLinkType.PreviousText) { return "Previous"; }
            return null;
        }
    }
    [Parameter] private string Class { get; set; }
    [Parameter] private RenderFragment ChildContent { get; set; }
}