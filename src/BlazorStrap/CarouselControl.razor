

<DynamicElement TagName="a" class="@classname" role="button" @onclick="@_onclick">
    <span class="@iconClassname" aria-hidden="true"></span>
    <span class="sr-only">@directionName</span>
</DynamicElement>

    @code {
        private string classname =>
            new CssBuilder()
                .AddClass("carousel-control-prev", CarouselDirection == CarouselDirection.Previous)
                .AddClass("carousel-control-next", CarouselDirection == CarouselDirection.Next)
                .AddClass(Class)
            .Build();

        private string iconClassname =>
            new CssBuilder()
                .AddClass("carousel-control-prev-icon",  CarouselDirection == CarouselDirection.Previous)
                .AddClass("carousel-control-next-icon",  CarouselDirection == CarouselDirection.Next)
            .Build();

        private string directionName => CarouselDirection == CarouselDirection.Previous ? "Previous" : "Next";
        
        [Parameter] private int ActiveIndex { get; set; }
        [Parameter] private int NumberOfItems { get; set; }
        [Parameter] private CarouselDirection CarouselDirection { get; set; } = CarouselDirection.Previous;
        [Parameter] private string Class { get; set; }

        [Parameter] private EventCallback<int> ActiveIndexChanged { get; set; }

        private async Task _onclick(UIMouseEventArgs e)
        {
            if (CarouselDirection == CarouselDirection.Previous)
            {
                if (ActiveIndex == 0) { ActiveIndex = NumberOfItems - 1; }
                else { ActiveIndex = ActiveIndex - 1; }
            }
            else
            {
                if (ActiveIndex == NumberOfItems - 1) { ActiveIndex = 0; }
                else { ActiveIndex = ActiveIndex + 1; }

            }
            await ActiveIndexChanged.InvokeAsync(ActiveIndex);
        }
    }